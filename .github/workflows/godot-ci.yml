name: Godot CI/CD Pipeline

on: [push, pull_request]

env:
  GODOT_VERSION: "4.2.1"
  GODOT_STATUS: "stable"
jobs:
  import-assets:
    runs-on: ubuntu-latest
    container: barichello/godot-ci:4.2.1
    steps:
      - uses: actions/checkout@v4
      - name: Cache import assets
        uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: Import assets
        run: godot --headless --verbose --editor --quit

  export-game:
    runs-on: ubuntu-latest
    needs: import-assets
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: install wine
        id: wine_install
        run: |
          sudo apt install wine64
          echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT
      - name: Export Game using Godot
        id: export
        uses: firebelley/godot-export@v5.2.1
        with:
          godot_executable_download_url: "https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}_linux.x86_64.zip"
          godot_export_templates_download_url: "https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}_export_templates.tpz"
          relative_project_path: "./godot"
          archive_output: true
          cache: true
          wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
      - name: create release
        uses: ncipollo/release-action@v1.13.0
        with:
          token: ${{ secrets.GH_SECRET_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*

  deploy-to-itchio-linux:
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: LinuxX11.zip
          path: ./
      - name: Deploy to Itch.io (Linux)
        run: butler push ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:linux
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

  deploy-to-itchio-windows:
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: Windows.zip
          path: ./
      - name: Deploy to Itch.io (Windows)
        run: butler push build/windows ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:windows
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

  deploy-to-itchio-mac:
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: macOS.zip
          path: ./
      - name: Deploy to Itch.io (Mac)
        run: butler push build/mac ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:mac
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

  deploy-to-itchio-web:
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: HTML5.zip
          path: ./
      - name: Deploy to Itch.io (Web)
        run: butler push build/web ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:web
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
